.button-scroll {
    display: inline-flex;
    align-items: center;
    text-align: left;
    color: color-from-theme('green', 'secondary');
    .ar & {
        text-align: right;
    }
    &:hover {
        opacity: 0.7;
        transition: opacity 0.3s ease-in-out;
    }
    p {
        width: rem(200px, 'small');
        @include respond-to('medium') {
            width: rem(200px, 'medium');
        }
        @include respond-to('large') {
            width: rem(200px, 'large');
        }
    }
}

.icon-arrow {
    position: relative;
    width: rem(56px, 'small');
    min-width: rem(56px, 'small');
    height: rem(56px, 'small');
    min-height: rem(56px, 'small');
    margin-right: rem(23px, 'small');
    border: 1px solid color-from-theme('green', 'secondary');
    border-radius: 100%;
    @include respond-to('medium') {
        width: rem(56px, 'medium');
        min-width: rem(56px, 'medium');
        height: rem(56px, 'medium');
        min-height: rem(56px, 'medium');
        margin-right: rem(23px, 'medium');
    }
    @include respond-to('large') {
        width: rem(56px, 'large');
        min-width: rem(56px, 'large');
        height: rem(56px, 'large');
        min-height: rem(56px, 'large');
        margin-right: rem(23px, 'large');
    }
    .ar & {
        margin-right: 0;
        margin-left: rem(23px, 'small');
        @include respond-to('medium') {
            margin-left: rem(23px, 'medium');
        }
        @include respond-to('large') {
            margin-left: rem(23px, 'large');
        }
    }
    svg {
        fill: color-from-theme('green', 'secondary');
        padding: rem(20px, 'small');
        @include respond-to('medium') {
            padding: rem(20px, 'medium');
        }
        @include respond-to('large') {
            padding: rem(20px, 'large');
        }
    }
}

.arrow {
    position: absolute;
    top: 50%;
    left: 50%;
    width: 100%;
    height: 100%;
    padding: rem(8px, 'small');
    fill: $color-grey;
    transform: translate3d(-50%, -50%, 0);
    @include respond-to('medium') {
        padding: rem(8px, 'medium');
    }
    @include respond-to('large') {
        padding: rem(8px, 'large');
    }
    transform: translate3d(-50%, -50%, 0) rotate3d(0, 0, 1, 90deg);
}
