.dataviz {
    position: relative;
    width: 100%;
    height: 100%;
    margin-top: rem(30px, 'small');
    margin-bottom: rem(92px, 'small');
    @include respond-to('medium') {
        margin-top: rem(30px, 'medium');
        margin-bottom: rem(88px, 'medium');
    }
    @include respond-to('large') {
        margin-top: rem(30px, 'large');
        margin-bottom: rem(88px, 'large');
    }
    .tooltip {
        position: absolute;
        width: fit-content;
        padding: rem(8px, 'small') rem(12px, 'small') rem(12px, 'small');
        background-color: var(--color-theme-primary);
        border-radius: rem(4px, 'small');
        color: $color-white;
        transform: translate(-50%, -100%);
        pointer-events: none;
        @include respond-to('medium') {
            padding: rem(8px, 'medium') rem(12px, 'medium') rem(12px, 'medium');
            border-radius: rem(4px, 'medium');
        }
        @include respond-to('large') {
            padding: rem(8px, 'large') rem(12px, 'large') rem(12px, 'large');
            border-radius: rem(4px, 'large');
        }
        &::after {
            content: '';
            position: absolute;
            bottom: 0;
            left: 50%;
            display: block;
            width: 0;
            height: 0;
            border-left-width: rem(9px, 'small');
            border-left-style: solid;
            border-left-color: transparent;
            border-right-width: rem(9px, 'small');
            border-right-style: solid;
            border-right-color: transparent;
            border-top-width: rem(9px, 'small');
            border-top-style: solid;
            border-top-color: var(--color-theme-primary);
            transform: translate(-50%, calc(100% - 1px));
            @include respond-to('medium') {
                border-left-width: rem(9px, 'medium');
                border-right-width: rem(9px, 'medium');
                border-top-width: rem(9px, 'medium');
            }
            @include respond-to('large') {
                border-left-width: rem(9px, 'large');
                border-right-width: rem(9px, 'large');
                border-top-width: rem(9px, 'large');
            }
        }
    }
    .tooltip-label {
        max-width: rem(180px, 'small');
        @include respond-to('medium') {
            max-width: rem(180px, 'medium');
        }
        @include respond-to('large') {
            max-width: rem(180px, 'large');
        }
    }
    .switch-container {
        position: absolute;
        width: fit-content;
    }
}

.chart {
    margin-right: 0px;
    margin-left: 0px;
}

.chart-heatmap {
    .domain {
        display: none;
    }
    .axis-y .tick text {
        color: $color-grey;
        text-anchor: start;
    }
    .axis-x .tick text {
        transform: translate(rem(24px, 'small'), rem(-24px, 'small')) rotate(-45deg);
        @include respond-to('medium') {
            transform: translate(rem(24px, 'medium'), rem(-24px, 'medium')) rotate(-45deg);
        }
        @include respond-to('large') {
            transform: translate(rem(24px, 'large'), rem(-24px, 'large')) rotate(-45deg);
        }
        .ar & {
            transform: translate(rem(24px, 'small'), rem(-24px, 'small')) rotate(45deg);
            @include respond-to('medium') {
                transform: translate(rem(24px, 'medium'), rem(-24px, 'medium')) rotate(-45deg);
            }
            @include respond-to('large') {
                transform: translate(rem(24px, 'large'), rem(-24px, 'large')) rotate(-45deg);
            }
        }
    }
    .label {
        color: var(--color-theme-primary);
        text-anchor: middle;
        pointer-events: none;
        transform: translate(0, rem(-6.5px, 'small'));
        @include respond-to('medium') {
            transform: translate(0, rem(-6.5px, 'medium'));
        }
        @include respond-to('large') {
            transform: translate(0, rem(-6.5px, 'large'));
        }
    }
    .circle-graph {
        fill: var(--color-theme-secondary);
        stroke: none;
        &:hover {
            fill: var(--color-theme-primary) !important;
            stroke: none;
        }
    }
    .circle-percent {
        fill: $color-white;
        stroke: var(--color-theme-secondary);
        stroke-width: 2px;
        &:hover {
            fill: $color-white;
            stroke: var(--color-theme-primary) !important;
        }
    }
}

.switch-container {
    display: inline-block;
    border: 1px solid $color-grey-light;
    border-radius: 100px;
    padding: rem(4px, 'small') rem(6px, 'small');
    @include respond-to('medium') {
        padding: rem(4px, 'medium') rem(6px, 'medium');
    }
    @include respond-to('large') {
        padding: rem(4px, 'large') rem(6px, 'large');
    }
    button {
        width: rem(24px, 'small');
        height: rem(24px, 'small');
        @include respond-to('medium') {
            width: rem(24px, 'medium');
            height: rem(24px, 'medium');
        }
        @include respond-to('large') {
            width: rem(24px, 'large');
            height: rem(24px, 'large');
        }
        &:first-child {
            margin-right: rem(8px, 'small');
            .ar & {
                margin-left: rem(8px, 'small');
                margin-right: 0;
            }
            @include respond-to('medium') {
                margin-right: rem(8px, 'medium');
                .ar & {
                    margin-left: rem(8px, 'medium');
                }
            }
            @include respond-to('large') {
                margin-right: rem(8px, 'large');
                .ar & {
                    margin-left: rem(8px, 'large');
                }
            }
        }
        svg {
            width: 100%;
            height: 100%;
            circle {
                fill: $color-white;
            }
            path {
                fill: $color-grey-light;
            }
        }
        &.is-active {
            svg {
                circle {
                    fill: var(--color-theme-primary);
                }
                path {
                    fill: $color-white;
                }
            }
        }
    }
}
